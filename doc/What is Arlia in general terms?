# The Arlia programming language
## What is Arlia in general terms?

Arlia is a new multi-paradigm programming language which wants to be object-oriented, in fact, Arlia wants above all to be object-oriented according to a definition close to the original. By using Arlia, many concepts from most languages are present, but the language makes them either simpler to use, or more complex by allowing a more abstract (= easier, but without costs), adapted, and powerful use. The object-oriented paradigm allows each manipulable value to be a potential object; allowing the developer to use the language in the best possible way. The language is at the same time very close to the machine, but also high level (other than in C++ or Rust for example), which allows to have a control on all during specific projects without worrying about memory, dynamic allocation or too complicated pointers. The language is also fast and efficient at runtime, as it rarely wastes resources (especially when the user or library allows it). It is also important to specify that Arlia is a very customizable language, which can, in a certain time, confuse its use, but this "weakness" is also a strength that makes development faster, more efficient and maintainable on large projects. It is a language that also has an integrated exception system (= present in the executable itself); this system does not slow down performance, and does not greatly increase the size of the executable. Whenever code is at risk of causing an error, depending on its level of dangerousness (= harmful for the whole program or not), the integrated system takes over and displays a message bypassing the error or tries again with other parameters. If you have knowledge in a language close to C-like, that you know object oriented and functional paradigm, then Arlia is a language that you will have no trouble learning at this level.

## Is Arlia a complicated language?

The answer is simple: only if the developer makes the language become one. That is, if you don't follow the optional language guideline, the developer moves further away from the path to an optimal program. However, taking other paths than the one proposed can be an advantage and an asset in the case of large projects. To conclude, no, the language is not complicated, but also more or less complex and efficient.

## On which platforms can Arlia be deployed?

For the first version of the language, only under Windows. But it is expected that the language will be extended SSSO (= Same Source Same Output) on Windows, Linux and Mac.
